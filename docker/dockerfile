FROM ubuntu:bionic

ARG AJ_BANK_FIREBASE_ADMINSDK_SERVICE_ACCOUNT
ARG AJ_BANK_FIREBASE_CONFIG
ARG AJ_BANK_USER_TEST_EMAIL_00
ARG AJ_BANK_USER_TEST_PSW_00
ARG AJ_BANK_WORKSPACE_HOST

ENV AJ_BANK_FIREBASE_ADMINSDK_SERVICE_ACCOUNT=$AJ_BANK_FIREBASE_ADMINSDK_SERVICE_ACCOUNT \
  AJ_BANK_FIREBASE_CONFIG=$AJ_BANK_FIREBASE_CONFIG \
  AJ_BANK_USER_TEST_EMAIL_00=$AJ_BANK_USER_TEST_EMAIL_00 \
  AJ_BANK_USER_TEST_PSW_00=$AJ_BANK_USER_TEST_PSW_00 \
  AJ_BANK_WORKSPACE_HOST=$AJ_BANK_WORKSPACE_HOST \
  AJ_BANK_WORKDIR=/home/devops/aj_bank \
  HOME_DEVOPS=/home/devops \
  # USER_DEVOPS=pptruser \
  USER_DEVOPS=devops \
  # GROUP_DEVOPS_PRIMARY=pptruser \
  GROUP_DEVOPS_PRIMARY=devops \
  CONFIG_NVM='export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'
# CONFIG_CHROME_DEVEL_SANDBOX='export CHROME_DEVEL_SANDBOX=/usr/local/sbin/chrome-devel-sandbox'
# PUPPETEER_SKIP_CHROMIUM_DOWNLOAD='true'

# Dependencies
RUN apt-get update \
  && apt-get upgrade -y \
  && apt-get install curl wget sudo gnupg gnupg1 gnupg2 -y  


# Using google chrome unstable for to work with puppeteer on docker, solution offered by:
# https://github.com/puppeteer/puppeteer/blob/master/docs/troubleshooting.md#running-puppeteer-in-docker
# https://github.com/buildkite/docker-puppeteer/blob/master/Dockerfile
# RUN  apt-get update \
# # Install latest chrome dev package, which installs the necessary libs to
# # make the bundled version of Chromium that Puppeteer installs work.
# && apt-get install -y wget --no-install-recommends \
# && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
# && sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' \
# && apt-get update \
# && apt-get install -y google-chrome-unstable --no-install-recommends \
# && rm -rf /var/lib/apt/lists/* \
# && wget --quiet https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh -O /usr/sbin/wait-for-it.sh \
# && chmod +x /usr/sbin/wait-for-it.sh


# For fix problem with libX11-xcb.so.1, libX11.so.6 on puppeter for ubuntu, 
# more info:
# https://techoverflow.net/2018/06/05/how-to-fix-puppetteer-error-while-loading-shared-libraries-libx11-xcb-so-1-cannot-open-shared-object-file-no-such-file-or-directory/
RUN apt-get update \
  && apt-get -y install xvfb gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 \
  libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 \
  libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 \
  libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 \
  libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget && \
  rm -rf /var/lib/apt/lists/*


# Create an $USER_DEVOPS
RUN groupadd -r ${GROUP_DEVOPS_PRIMARY} \
  && useradd -s /bin/bash --create-home -r -g ${GROUP_DEVOPS_PRIMARY} -G audio,video ${USER_DEVOPS} \
  && passwd -d $USER_DEVOPS

# Create working directory
RUN mkdir -p $AJ_BANK_WORKDIR \
  && chown -R -v $USER_DEVOPS:${GROUP_DEVOPS_PRIMARY} $HOME_DEVOPS/*

# Set WORKDIR
WORKDIR $AJ_BANK_WORKDIR

COPY --chown=$USER_DEVOPS:$GROUP_DEVOPS_PRIMARY . $AJ_BANK_WORKDIR 

# Change to $USER_DEVOPS
USER ${USER_DEVOPS}

# Config $USER_DEVOPS
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash \
  && eval ${CONFIG_NVM} \
  && nvm install 12.13.1 \
  && nvm use 12.13.1

# Installing node_modules
RUN eval ${CONFIG_NVM} \
  && printf "\n@@@@@ Installing node_modules in workspace project, this could take a long time ... @@@@@ \n" \
  && npm install \
  && cd src && npm install && cd .. \
  && cd functions && npm install && cd .. \
  && printf "\n @@@@@ Installed node_modules @@@@@ \n"

# # Change to user root
# USER root

# # Setuid sandbox
# # https://github.com/puppeteer/puppeteer/blob/master/docs/troubleshooting.md#alternative-setup-setuid-sandbox
# RUN cd ./node_modules/puppeteer/.local-chromium/**/chrome-linux/ && chown root:root chrome_sandbox && chmod 4755 chrome_sandbox && cp -p chrome_sandbox /usr/local/sbin/chrome-devel-sandbox && eval ${CONFIG_CHROME_DEVEL_SANDBOX}

# # Change to $USER_DEVOPS
# USER ${USER_DEVOPS}

# ENTRYPOINT ["/bin/bash", "-c", "whoami && eval ${CONFIG_NVM} && eval ${CONFIG_CHROME_DEVEL_SANDBOX} && source ./make build && source ./make test"]

ENTRYPOINT ["/bin/bash", "-c", "whoami && eval ${CONFIG_NVM} && source ./make build && source ./make test"] 